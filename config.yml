benchmarking:
  random_state: 42
  estimators:
    KNeighborsClassifier_brute_force:
      name: KNeighborsClassifier_brute_force
      estimator: sklearn.neighbors.KNeighborsClassifier
      benchmarking_method: hp_match
      predict_with_onnx: True
      hyperparameters:
        init:
          n_neighbors:
            - 1
            - 5
            - 100
          algorithm:
            - brute
          n_jobs:
            - -1
            - 1
      metrics:
        - accuracy_score
      datasets:
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 2
            n_redundant: 0
            random_state: 42
          n_features: 1e2
          n_samples_train:
            - 1e5
          n_samples_test:
            - 1
            - 1e3
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 2
            n_redundant: 0
            random_state: 42
          n_features: 2
          n_samples_train:
            - 1e5
          n_samples_test:
            - 1
            - 1e3

    sklearnex_KNeighborsClassifier_brute_force:
      inherit: KNeighborsClassifier_brute_force
      estimator: sklearnex.neighbors.KNeighborsClassifier

    KNeighborsClassifier_kd_tree:
      name: KNeighborsClassifier_kd_tree
      estimator: sklearn.neighbors.KNeighborsClassifier
      benchmarking_method: hp_match
      predict_with_onnx: True
      hyperparameters:
        init:
          n_neighbors:
            - 1
            - 5
            - 100
          algorithm:
            - kd_tree
          n_jobs:
            - -1
            - 1
      metrics:
        - accuracy_score
      datasets:
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 2
            n_redundant: 0
            random_state: 42
          n_features: 10
          n_samples_train:
            - 1e6
          n_samples_test:
            - 1
            - 1e3
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 2
            n_redundant: 0
            random_state: 42
          n_features: 2
          n_samples_train:
            - 1e3
          n_samples_test:
            - 1
            - 1e3

    sklearnex_KNeighborsClassifier_kd_tree:
      inherit: KNeighborsClassifier_kd_tree
      estimator: sklearnex.neighbors.KNeighborsClassifier

    KMeans_tall:
      name: KMeans_tall
      estimator: sklearn.cluster.KMeans
      benchmarking_method: hp_match
      hyperparameters:
        init:
          init:
            - k-means++
            - random
          algorithm:
            - full
          n_clusters:
            - 3
          max_iter:
            - 30
          n_init:
            - 1
          tol:
            - 1e-16
      metrics:
        - adjusted_rand_score
      datasets:
        - sample_generator: sklearn.datasets.make_blobs
          params:
            random_state: 42
            cluster_std: 20.0
            centers: 200
          n_features: 2
          n_samples_train:
            - 1e6
          n_samples_test:
            - 1
            - 1e3
        - sample_generator: sklearn.datasets.make_blobs
          params:
            random_state: 42
            cluster_std: 20.0
            centers: 200
          n_features: 1e2
          n_samples_train:
            - 1e6
          n_samples_test:
            - 1
            - 1e3

    sklearnex_KMeans_tall:
      inherit: KMeans_tall
      estimator: sklearnex.cluster.KMeans

    KMeans_short:
      name: KMeans_short
      estimator: sklearn.cluster.KMeans
      benchmarking_method: hp_match
      hyperparameters:
        init:
          init:
            - k-means++
            - random
          algorithm:
            - full
          n_clusters:
            - 300
          max_iter:
            - 20
          n_init:
            - 1
          tol:
            - 1e-16
      metrics:
        - adjusted_rand_score
      datasets:
        - sample_generator: sklearn.datasets.make_blobs
          params:
            random_state: 42
            cluster_std: 20.0
            centers: 200
          n_features: 2
          n_samples_train:
            - 1e4
          n_samples_test:
            - 1
            - 1e3
        - sample_generator: sklearn.datasets.make_blobs
          params:
            random_state: 42
            cluster_std: 13.0
            centers: 200
          n_features: 1e2
          n_samples_train:
            - 1e4
          n_samples_test:
            - 1
            - 1e3

    sklearnex_KMeans_short:
      inherit: KMeans_short
      estimator: sklearnex.cluster.KMeans

    LogisticRegression:
      name: LogisticRegression
      estimator: sklearn.linear_model.LogisticRegression
      benchmarking_method: hp_match
      metrics:
        - accuracy_score
      datasets:
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 5
            n_informative: 5
            n_redundant: 0
            random_state: 42
          n_features: 1e2
          n_samples_train:
            - 1e6
          n_samples_test:
            - 1
            - 1e3
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 5
            n_informative: 5
            n_redundant: 0
            random_state: 42
          n_features: 1e4
          n_samples_train:
            - 1e3
          n_samples_test:
            - 1
            - 1e2

    sklearnex_LogisticRegression:
      inherit: LogisticRegression
      estimator: sklearnex.linear_model.LogisticRegression

    Ridge:
      name: Ridge
      estimator: sklearn.linear_model.Ridge
      benchmarking_method: hp_match
      metrics:
        - r2_score
      datasets:
        - sample_generator: sklearn.datasets.make_regression
          params:
            n_informative: 10
            random_state: 42
          n_features: 1e4
          n_samples_train:
            - 1e3
          n_samples_test:
            - 1
            - 1e3
        - sample_generator: sklearn.datasets.make_regression
          params:
            n_informative: 10
            random_state: 42
          n_features: 1e2
          n_samples_train:
            - 1e6
          n_samples_test:
            - 1
            - 1e3

    sklearnex_Ridge:
      inherit: Ridge
      estimator: sklearnex.linear_model.Ridge

    HistGradientBoostingClassifier_best:
      name: HistGradientBoostingClassifier_best
      estimator: sklearn.ensemble.HistGradientBoostingClassifier
      predict_with_onnx: True
      benchmarking_method: hp_match
      metrics:
        - accuracy_score
      hyperparameters:
        init:
          learning_rate:
            - 0.01
          n_iter_no_change:
            - 10
          max_leaf_nodes:
            - 100
          max_bins:
            - 255
          min_samples_leaf:
            - 100
          max_iter:
            - 300
      datasets:
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 5
            n_informative: 5
            n_redundant: 0
            random_state: 42
          n_features: 1e2
          n_samples_train:
            - 1e5
          n_samples_test:
            - 1e3

    HistGradientBoostingClassifier:
      name: HistGradientBoostingClassifier
      estimator: sklearn.ensemble.HistGradientBoostingClassifier
      predict_with_onnx: True
      benchmarking_method: hpo
      metrics:
        - accuracy_score
      hyperparameters:
        init:
          learning_rate:
            - 0.01
            - 0.05
            - 0.1
            - 0.5
            - 1.
          n_iter_no_change:
            - 10
          max_leaf_nodes:
            - 3
            - 10
            - 30
            - 100
          max_bins:
            - 32
            - 64
            - 128
            - 255
          min_samples_leaf:
            - 2
            - 10
            - 20
            - 100
            - 200
          max_iter:
            - 10
            - 30
            - 100
            - 300
      datasets:
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 5
            n_informative: 5
            n_redundant: 0
            random_state: 42
          n_features: 1e2
          n_samples_train:
            - 1e5
          n_samples_test:
            - 1e3

    lightgbm:
      name: LGBMClassifier
      estimator: lightgbm.LGBMClassifier
      benchmarking_method: hpo
      metrics:
        - accuracy_score
      hyperparameters:
        init:
          learning_rate:
            - 0.01
            - 0.05
            - 0.1
            - 0.5
            - 1.
          num_leaves:
            - 3
            - 10
            - 30
            - 100
          max_bin:
            - 32
            - 64
            - 128
            - 255
          min_data_in_leaf:
            - 2
            - 10
            - 20
            - 100
            - 200
          bagging_fraction:
            - 0.5
            - 0.8
            - 1
          feature_fraction_bynode:
            - 0.5
            - 0.8
            - 1
          n_estimators:
            - 10
            - 30
            - 100
            - 300
      datasets:
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 5
            n_informative: 5
            n_redundant: 0
            random_state: 42
          n_features: 1e2
          n_samples_valid: 50000
          n_samples_train:
            - 1e5
          n_samples_test:
            - 1e3

    xgboost:
      name: XGBClassifier
      estimator: xgboost.XGBClassifier
      benchmarking_method: hpo
      metrics:
        - accuracy_score
      hyperparameters:
        init:
          validate_parameters:
            - True
          tree_method:
            - hist
          use_label_encoder:
            - False
          learning_rate:
            - 0.01
            - 0.05
            - 0.1
            - 0.5
            - 1.
          max_leaves:
            - 3
            - 10
            - 30
            - 100
          max_bin:
            - 32
            - 64
            - 128
            - 255
          min_child_weight:
            - 2
            - 10
            - 20
            - 100
            - 200
          subsample:
            - 0.5
            - 0.8
            - 1
          colsample_bynode:
            - 0.5
            - 0.8
            - 1
          max_iter:
            - 10
            - 30
            - 100
            - 300
      datasets:
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 5
            n_informative: 5
            n_redundant: 0
            random_state: 42
          n_features: 1e2
          n_samples_valid: 10_000
          n_samples_train:
            - 1e5
          n_samples_test:
            - 1e3

    catboost_lossguide:
      name: CatBoostClassifier_lossguide
      estimator: catboost.CatBoostClassifier
      benchmarking_method: hpo
      metrics:
        - accuracy_score
      hyperparameters:
        init:
          allow_writing_files:
            - False
          grow_policy:
            - Lossguide
          bootstrap_type:
            - MVS
          learning_rate:
            - 0.01
            - 0.05
            - 0.1
            - 0.5
            - 1.
          max_leaves:
            - 3
            - 10
            - 30
            - 100
          border_count:
            - 32
            - 64
            - 128
            - 255
          min_data_in_leaf:
            - 2
            - 10
            - 20
            - 100
            - 200
          subsample:
            - 0.5
            - 0.8
            - 1
          rsm:
            - 0.5
            - 0.8
            - 1
          max_depth:
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
          iterations:
            - 10
            - 30
            - 100
            - 300
        fit:
          eval_set: (X_valid, y_valid)
          early_stopping_rounds: 10
      datasets:
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 5
            n_informative: 5
            n_redundant: 0
            random_state: 42
          n_features: 1e2
          n_samples_valid: 50000
          n_samples_train:
            - 1e5
          n_samples_test:
            - 1e3

    catboost_symmetric:
      name: CatBoostClassifier_symmetric
      estimator: catboost.CatBoostClassifier
      benchmarking_method: hpo
      metrics:
        - accuracy_score
      hyperparameters:
        init:
          allow_writing_files:
            - False
          grow_policy:
            - SymmetricTree
          bootstrap_type:
            - MVS
          learning_rate:
            - 0.01
            - 0.05
            - 0.1
            - 0.5
            - 1.
          border_count:
            - 32
            - 64
            - 128
            - 255
          min_data_in_leaf:
            - 2
            - 10
            - 20
            - 100
            - 200
          subsample:
            - 0.5
            - 0.8
            - 1
          rsm:
            - 0.5
            - 0.8
            - 1
          max_depth:
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
          iterations:
            - 10
            - 30
            - 100
            - 300
        fit:
          eval_set: (X_valid, y_valid)
          early_stopping_rounds: 10
      datasets:
        - sample_generator: sklearn.datasets.make_classification
          params:
            n_classes: 5
            n_informative: 5
            n_redundant: 0
            random_state: 42
          n_features: 1e2
          n_samples_valid: 50000
          n_samples_train:
            - 1e5
          n_samples_test:
            - 1e3

hp_match_reporting:
  n_cols: 2
  estimators:
    KNeighborsClassifier_brute_force:
      name: KNeighborsClassifier_brute_force
      against_lib: sklearnex
      split_bars:
        - n_jobs
      compare:
        - accuracy_score

    KNeighborsClassifier_brute_force:
      name: KNeighborsClassifier_brute_force
      against_lib: onnx
      split_bars:
        - n_jobs
      compare:
        - accuracy_score

    KNeighborsClassifier_kd_tree:
      name: KNeighborsClassifier_kd_tree
      against_lib: sklearnex
      split_bars:
        - n_jobs
      compare:
        - accuracy_score

    KNeighborsClassifier_kd_tree:
      name: KNeighborsClassifier_kd_tree
      against_lib: onnx
      split_bars:
        - n_jobs
      compare:
        - accuracy_score

    KMeans_tall:
      name: KMeans_tall
      against_lib: sklearnex
      compare:
        - n_iter
        - adjusted_rand_score

    KMeans_short:
      name: KMeans_short
      against_lib: sklearnex
      compare:
        - n_iter
        - adjusted_rand_score

    LogisticRegression:
      name: LogisticRegression
      against_lib: sklearnex

    Ridge:
      name: Ridge
      against_lib: sklearnex

    HistGradientBoostingClassifier_best:
      name: HistGradientBoostingClassifier_best
      against_lib: onnx
      compare:
        - accuracy_score

hpo_reporting:
  speedup_thresholds:
    - 0.74
    - 0.76
    - 0.78
  estimators:
    HistGradientBoostingClassifier:
      lib: sklearn
      legend: scikit-learn
      color: blue

    LGBMClassifier:
      lib: lightgbm
      color: red

    XGBClassifier:
      lib: xgboost
      color: green

    CatBoostClassifier_lossguide:
      lib: catboost
      legend: catboost lossguide
      color: purple

    CatBoostClassifier_symmetric:
      lib: catboost
      legend: catboost symmetric
      color: orange
